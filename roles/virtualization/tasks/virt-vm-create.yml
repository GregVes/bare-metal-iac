- name: create vms
  tags:
    - virt_vm_create
  block:
  - name: define VM for k8s master node
    virt:
      command: define
      xml: "{{ lookup('template', 'virt-master-xml.j2') }}"
    become_user: "{{ virt_admin }}"
    become: true

  - name: start VM for k8s master node
    virt:
      name: "{{ master_node_hostname }}"
      command: start
      state: running
    become_user: "{{ virt_admin }}"
    become: true

  - name: define VMs for k8s worker nodes
    virt:
      command: define
      xml: "{{ lookup('template', 'virt-worker-{{ item.unique_guest_identifier }}-xml.j2') }}"
    become_user: "{{ virt_admin }}"
    become: true
    with_items: "{{ worker_nodes }}"

  - name: start VMs for k8s worker nodes
    virt:
      name: "{{ item.hostname }}"
      command: start
      state: running
    become_user: "{{ virt_admin }}"
    become: true
    with_items: "{{ worker_nodes }}"

  - name: add kvm guests to known hosts file on control node
    shell: |
      #ssh-keygen -f "{{ dest_ssh_key_pair}}known_hosts" -R "51.83.150.197"
      #ssh-keygen -f "{{ dest_ssh_key_pair}}known_hosts" -R "51.83.147.42"
      #ssh-keygen -f "{{ dest_ssh_key_pair}}known_hosts" -R "51.83.179.16"

      ssh-keyscan -H 51.83.150.197 >> ~/.ssh/known_hosts
      ssh-keyscan -H 51.83.147.42 >> ~/.ssh/known_hosts
      ssh-keyscan -H 51.83.179.16 >> ~/.ssh/known_hosts
      exit 0
    delegate_to: localhost

  # - name: retrieve worker nodes private IPs
  #   shell: >
  #     set -o pipefail ;
  #     sudo virsh net-dhcp-leases default
  #     | awk 'FNR == "{{ item.fnr }}" {print $5}'
  #     | awk -F "/" '{print $1}'
  #   register: vm_ip
  #   with_items: "{{ worker_nodes }}"
  #   args:
  #     executable: /bin/bash
  when: inventory_hostname in groups["kvm_host"]