- name: create vms
  tags:
    - virt_vm_create
  block:
  - name: define VM for k8s master node
    virt:
      command: define
      xml: "{{ lookup('template', 'virt-master-xml.j2') }}"
    become_user: "{{ virt_admin }}"
    become: true

  - name: start VM for k8s master node
    virt:
      name: "{{ master_node_hostname }}"
      command: start
      state: running
    become_user: "{{ virt_admin }}"
    become: true

  - name: define VMs for k8s worker nodes
    virt:
      command: define
      xml: "{{ lookup('template', 'virt-worker-{{ item.unique_guest_identifier }}-xml.j2') }}"
    become_user: "{{ virt_admin }}"
    become: true
    with_items: "{{ worker_nodes }}"

  - name: start VMs for k8s worker nodes
    virt:
      name: "{{ item.hostname }}"
      command: start
      state: running
    become_user: "{{ virt_admin }}"
    become: true
    with_items: "{{ worker_nodes }}"


  - name: retrieve worker nodes private IPs
    shell: >
      set -o pipefail ;
      sudo virsh net-dhcp-leases default
      | awk 'FNR == "{{ item.fnr }}" {print $5}'
      | awk -F "/" '{print $1}'
    register: vm_ip
    with_items: "{{ worker_nodes }}"
    args:
      executable: /bin/bash

  - name: define list of VMs IPs
    set_fact:
      vms_ips: []

  - name: append VMs IPs to list
    set_fact:
      vms_ips: "{{ vms_ips + [ item.stdout ] }}"
    with_items: "{{ vm_ip.results }}"