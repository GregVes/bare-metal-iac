- name: gcloud
  block:
  - name: Check if gcloud is installed
    stat:
      path: "{{ gcloud_bin_path }}"
    become: true
    register: gcloud_bin

  - name: Add gcloud sdk distr URI as a package source if gcloud is not installed
    lineinfile:
      path: /etc/apt/sources.list.d/google-cloud-sdk.list
      line: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main"
      create: yes
    become: true
    when: not gcloud_bin.stat.exists

  - name: Add gcloud as a trusted package if gcloud is not installed
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      keyring: /usr/share/keyrings/cloud.google.gpg
    become: true
    when: not gcloud_bin.stat.exists

  - name: Update repo cache
    apt:
      update_cache: yes
    become: yes

  - name: install gcloud if does not exist
    apt:
      name: google-cloud-sdk
    become: yes
        
  - name: if gcloud creds folder does not exist, create it
    file:
      path: "{{ gcloud_sa_folder }}"
      state: directory
    become: yes

  - name: Check if gcloud sa key file exist, 
    stat:
      path: "{{ gcloud_sa_folder }}/{{ gcloud[server_name].sa_file }}"
    become: yes
    register: sa_key

  - name: if gcloud sa key does not exist, copy encrypted version
    copy:
      src: "{{ gcloud_sa_file_name }}.gpg"
      dest: "{{ gcloud_sa_folder }}/{{ gcloud[server_name].sa_file }}.gpg"
    when: not sa_key.stat.exists
    become: yes

  - name: Check if gcloud sa encrypted key file exist, 
    stat:
      path: "{{ gcloud_sa_folder }}/{{ gcloud[server_name].sa_file }}.gpg"
    register: sa_key_encrypted
    become: yes
    
  - name:  if gcloud sa encrypted key exists, decrypt it
    shell: |
      set -e
      echo "{{ gcloud_sa_key_password }}" | gpg --batch --yes  --passphrase-fd 0 "{{ gcloud_sa_folder }}/{{ gcloud[item].sa_file }}.gpg"
      rm -rf "{{ gcloud_sa_folder }}/{{ gcloud_sa_file_name }}.gpg"
    become: yes
    when: sa_key_encrypted.stat.exists

  - name:  authenticate to gcloud
    shell: |
      set -e
      gcloud auth activate-service-account --key-file={{ gcloud_sa_folder }}/{{ gcloud[server_name].sa_file }}
    become: yes

  - name: add google-auth Python lib
    pip:
      name:
        - google-auth
    become: yes

 # The following fails because of https://github.com/GregVes/bare-metal-iac/issues/7
  - name: create bucket for backups
    google.cloud.gcp_storage_bucket:
      name: "{{ server_name }}-backups"
      project: gcloud[server_name].project_name
      auth_kind: serviceaccount
      service_account_file: "{{ gcloud_sa_folder }}/{{ gcloud_sa_file_name }}"
      state: present
    become: yes

  tags:
    - gcloud
