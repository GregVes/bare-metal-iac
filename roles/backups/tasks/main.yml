- name: backups
  block:
  - name: Install required system packages
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: present
    with_items: "{{ borg_packages }}"
    become: yes

  - name: Install required Python packages
    pip:
      name: "{{ borg_python_packages }}"
      extra_args: --upgrade
    when: borg_python_packages is defined
    become: yes

  - name: Create Borg repository if not exist
    file:
      path: "{{ borg_repository }}"
      state: directory
    become: yes

  - name: Create /etc/borgmatic dir if not exist
    file:
      path: /etc/borgmatic
      state: directory
    become: yes

  - name: Create /var/log/borgmatic dir if not exist
    file:
      path: /var/log/borgmatic
      state: directory
    become: yes

  - name: Copy Borgmatic templated file to /etc/borgmatic/config.yaml
    template:
      src: borgmatic.yaml.j2
      dest: "/etc/borgmatic/{{ borgmatic_config_name }}"
    become: yes

  - name: Init repository
    shell: borgmatic init --encryption repokey
    become: yes

  - name: Check if backup script exists
    stat:
      path: "/root/{{ borg_backup_script }}"
    become: yes
    register: backup_script

  - name: Copy backup script if not exists
    copy:
      src: "{{ borg_backup_script }}"
      dest: "/root/{{ borg_backup_script }}"
      mode: 710 
      owner: root
      group: root
    become: yes
    when: not backup_script.stat.exists

  - name: Create Cron job for backups
    cron:
      name: "{{ borgmatic_cron_name }}"
      hour: "{{ borgmatic_cron_hour }}"
      minute: "{{ borgmatic_cron_minute }}"
      user: "root"
      cron_file: "{{ borgmatic_cron_name }}"
      job: "/root/{{ borg_backup_script }} {{ borg_repository }} {{ borg_gcloud_bucket }}"
    become: yes

  tags:
    - backups